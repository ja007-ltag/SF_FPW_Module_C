# C1.6. Методы и функции

# Давайте перед тем, как приступим к работе с наследованием, вернемся к уже затронутому ранее понятию — инкапсуляции.
#
# Инкапсуляция — это один из принципов ООП, который говорит нам о том,
# что поля и методы должны быть одной целой системой. Иначе говоря, работаем с полями класса только через методы.
# ----------------------------------
# Сначала вспомним, как мы только что работали с полями класса:

# Пример неправильного кода.
# Создаём неправильный класс.
class Human:
    age = None

    def __init__(self, age=4):
        self.age = age


h = Human()
h.age = 15  # (Так делать лучше не стоит, если вы хотите когда-нибудь найти работу)
# print(h.age)  # и так тоже
# print("------------------")


# Более правильный пример
# Исправим наш предыдущий код.
class Human:
    age = None

    def __init__(self, age=4):
        self.age = age

    # добавляем геттер - специальный метод для получения поля
    def get_age(self):
        return self.age

    # добавляем сеттер - специальный метод для установки нового значения
    def set_age(self, age):
        if isinstance(age, int) and age > 0:
            self.age = age


h = Human()
h.set_age(30)
h.age = "asdgasdf"
print(h.get_age())
print(h.age)
